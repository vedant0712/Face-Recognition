{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Register/Register.js","components/Signin/Signin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","Brain","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Register","props","onNameChange","event","setState","target","value","onEmailChange","email","onPasswordChange","password","onSublitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","loadUser","htmlFor","this","React","Component","Signin","signInEmail","signInPassword","href","app","Clarifai","App","apiKey","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c93d4a98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.798fbd6b.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange ,isSignedIn}) => {\r\n\tif (isSignedIn){\r\n\t\treturn (\r\n\t\t\t<nav style={{display : 'flex', justifyContent : 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className = 'f3 link dim black unerline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>);\r\n\t}  else {\r\n\t\treturn (\r\n\t\t\t<nav style={{display : 'flex', justifyContent : 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className = 'f3 link dim black unerline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className = 'f3 link dim black unerline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport Brain from './brain.png';\r\nimport './Logo.css';\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className='ma4 mt0' >\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 40 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa3\"><img style={{paddingTop: '5px'}} alt = 'logo' src={Brain}/></div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange , onSubmit}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic Brain will detect faces in your pictures'}\r\n\t\t\t</p>\r\n\t\t\t<div className = 'center'>\r\n\t\t\t\t<div className=' form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit}>Detect!</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name , entries}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name}, your current entry count is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' height='auto' />\r\n\t\t\t\t<div className='bounding-box' style={{top : box.topRow, right : box.rightCol , bottom : box.bottomRow , left : box.leftCol }} ></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;\r\n\r\n// ","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\temail:'',\r\n\t\t\tpassword:'',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name : event.target.value})\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email : event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password : event.target.value})\r\n\t}\r\n\r\n\tonSublitSignIn = () => {\r\n\t\tfetch('https://desolate-headland-33545.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders : {'Content-Type' : 'application/json'},\r\n\t\t\tbody : JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword : this.state.password,\r\n\t\t\t\tname : this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn(\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"text\" \r\n\t\t\t\t        \tname=\"name\"  \r\n\t\t\t\t        \tid=\"name\"\r\n\t\t\t\t        \tonChange={this.onNameChange} \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t        \tonChange={this.onEmailChange} \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t        \tonChange={this.onPasswordChange} \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t\t\t\tonClick={this.onSublitSignIn}\r\n\t\t\t\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\tvalue=\"Register\" \r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tsignInEmail:'',\r\n\t\t\tsignInPassword:'',\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail : event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword : event.target.value})\r\n\t}\r\n\r\n\tonSublitSignIn = () => {\r\n\t\tfetch('https://desolate-headland-33545.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders : {'Content-Type' : 'application/json'},\r\n\t\t\tbody : JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword : this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\tthis.props.loadUser(user)\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn(\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\"\r\n\t\t\t\t        \tonChange={this.onEmailChange}\r\n\t\t\t\t        \t />\r\n\t\t\t\t      \r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\"\r\n\t\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t        \t />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t\t\t\tonClick={this.onSublitSignIn}\r\n\t\t\t\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\tvalue=\"Sign in\" \r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p href=\"#0\"onClick={() => onRouteChange('register')} className=\"f6 link dim black pointer hover-white db\">Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default Signin;\r\n","import React , {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\n\nconst app = new Clarifai.App({\n apiKey: '203863f9ecc448bcb703cbc00df8d284'\n});\n\nconst initialState = {\n      input : '',\n      imageUrl: '',\n      box : {},\n      route: 'signin',\n      isSignedIn: false,\n      user : {\n        id: '',\n        name: '',\n        email: '',\n        entries : 0 ,\n        joined: ''\n      }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state=initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user : {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries : data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol : clarifaiFace.left_col * width,\n      topRow : clarifaiFace.top_row * height,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomRow : height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box : box});\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn : true})\n    }\n    this.setState({route : route});\n  }\n\n  onInputChange = (event) => {\nthis.setState({input :event.target.value});\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl : this.state.input});\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then( response => {\n      if (response) {\n        fetch('https://desolate-headland-33545.herokuapp.com/image' , {\n          method: 'put',\n          headers : {'Content-Type' : 'application/json'},\n          body : JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries : count}))\n          })\n          .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n  render () {\n    const {isSignedIn , imageUrl , route , box} = this.state;\n    return (\n     <div className=\"App\">\n      <Particles className='particles'\n          params={{\n            \"particles\": {\n                \"number\": {\n                    \"value\": 100\n                },\n                \"density\": {\n                    \"value\": 800\n                },\n                \"size\": {\n                    \"value\": 3\n                }\n            },\n            \"interactivity\": {\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    }\n                }\n            }\n        }} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' ?\n          <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n          :(\n            route=== 'signin'\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n           )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}